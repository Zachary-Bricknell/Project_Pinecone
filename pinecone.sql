-- Enable PostGIS (geospatial objects) extension on the current database.
-- This is needed for geometry types like MULTIPOINTZ.
CREATE EXTENSION postgis;

-- Create a table to store raw LiDAR scans with a unique auto-incremented primary key,
-- a geometry column to store the scan data, and a timestamp for the creation date.
CREATE TABLE "raw_lidar" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "raw_scan" geometry(MULTIPOINTZ),
  "created" TIMESTAMP
);

-- Create a table for storing cleaned tree data from processed LiDAR scans,
-- including the cleaned geometry and the timestamp of creation.
CREATE TABLE "cleaned_tree" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "cleaned_scan" geometry(MULTIPOINTZ),
  "created" TIMESTAMP
);

-- Create a table for preprocessed tree data that includes the tree's preprocessed
-- scan geometry, height, diameter at breast height (DBH), volume, and creation timestamp.
CREATE TABLE "preprocessed_tree" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "preprocessed_scan" geometry(MULTIPOINTZ),
  "height" FLOAT,
  "dbh" FLOAT,
  "volume" FLOAT,
  "created" TIMESTAMP
);

-- Create a table for trees that consolidates information from raw, cleaned, and
-- preprocessed data, ensuring all tree scans are linked and traceable.
CREATE TABLE "trees" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "name" VARCHAR,
  "raw_lidar_id" INT UNIQUE,
  "cleaned_tree_id" INT UNIQUE,
  "preprocessed_tree_id" INT UNIQUE
);

-- Create a table for 'cookie' measurements taken from the tree, storing the diameter
-- and height of each cookie measurement, linked to the respective tree.
CREATE TABLE "cookie" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY NOT NULL,
  "tree_id" INT NOT NULL,
  "diameter" FLOAT,
  "height" FLOAT
);

-- Add foreign key constraints to link the 'trees' table to the 'raw_lidar', 'cleaned_tree',
-- and 'preprocessed_tree' tables, allowing for relational integrity and traceability
-- from tree to its various scan representations.
ALTER TABLE "trees" ADD FOREIGN KEY ("raw_lidar_id") REFERENCES "raw_lidar" ("id");
ALTER TABLE "trees" ADD FOREIGN KEY ("cleaned_tree_id") REFERENCES "cleaned_tree" ("id");
ALTER TABLE "trees" ADD FOREIGN KEY ("preprocessed_tree_id") REFERENCES "preprocessed_tree" ("id");

-- Add a foreign key constraint to the 'cookie' table to ensure each 'cookie' record is
-- associated with a valid tree record.
ALTER TABLE "cookie" ADD FOREIGN KEY ("tree_id") REFERENCES "trees" ("id");
